import groovy.json.JsonSlurper
import groovy.json.JsonOutput

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "1.2.4"
    id "com.wynprice.cursemaven" version "2.1.5"
    id 'java'
    id 'eclipse'
    id 'idea'
}

apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
idea {
    module {
        //Exclude directories from being managed
        for (String excludeDirName in ["run", "out", "logs", "gradle"]) {
            File excludeDir = new File(projectDir, excludeDirName)
            excludeDirs.add(excludeDir)
        }
    }
}

sourceSets {
    api {
        java {
            srcDir 'src/api/java'
        }
    }
    main {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
    test {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
}

configurations {
    //Let the api source set know about forge
    apiCompile.extendsFrom(compile)
}

version = "${projecte_version}"
group= "java.moze_intel" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "projecte"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: "snapshot", version: "${mappings_version}"
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // default run configurations.
    // these can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            properties 'forge.logging.markers': 'REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.console.level': 'debug'
            properties 'fml.earlyprogresswindow': 'false'

            //The below if statements are to add args to your gradle.properties file in user home
            // (DO NOT add them directly to the gradle.properties file for this project)
            // Setting the below properties allows use of your normal Minecraft account in the
            // dev environment including having your skin load. Each property also has a comment
            // explaining what information to set the value to/format it expects
            // One thing to note is because of the caching that goes on, after changing these
            // variables, you need to refresh the project and rerun genIntellijRuns/genEclipseRuns
            if (project.hasProperty('mc_uuid')) {
                //Your uuid without any dashes in the middle
                args '--uuid', project.getProperty('mc_uuid')
            }
            if (project.hasProperty('mc_username')) {
                //Your username/display name, this is the name that shows up in chat
                // Note: This is not your email, even if you have a Mojang account
                args '--username', project.getProperty('mc_username')
            }
            if (project.hasProperty('mc_accessToken')) {
                //Your access token, you can find it in your '.minecraft/launcher_profiles.json' file
                args '--accessToken', project.getProperty('mc_accessToken')
            }

            mods {
                projecte {
                    sources(sourceSets.main, sourceSets.api)
                }
            }
        }
        server {
            workingDirectory project.file('run')
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.console.level': 'debug'
            mods {
                projecte {
                    sources(sourceSets.main, sourceSets.api)
                }
            }
        }
        data {
            workingDirectory project.file('run')
            environment 'target', 'fmluserdevdata'
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.console.level': 'debug'
            properties 'fml.earlyprogresswindow': 'false'
            mods {
                projecte {
                    sources(sourceSets.main, sourceSets.api)
                }
            }
        }
    }
}

repositories {
	maven {
		name "MinecraftForge"
		url "https://files.minecraftforge.net/maven/"
	}
    maven {
        name 'JEI'
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name 'CraftTweaker'
        url "https://maven.blamejared.com"
    }
    maven {
        name 'curios'
        url "https://maven.theillusivec4.top/"
    }
    maven {
        name 'TOP'
        url "https://maven.tterrag.com/"
    }
}

test {
    useJUnitPlatform()
}
 
dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit_version}"

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")

    compileOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-${minecraft_version}-${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-${minecraft_version}-${curios_version}")

    compileOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.15:${top_version}:api")
    runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.15:${top_version}")

    compileOnly fg.deobf("curse.maven:Hwyla:${hwyla_curse_id_api}")
    runtimeOnly fg.deobf("curse.maven:Hwyla:${hwyla_curse_id}")

    compile fg.deobf("curse.maven:CraftTweaker-${minecraft_version}:${crafttweaker_curse_id}")

    compile group: "org.apache.commons", name: "commons-math3", version: "3.6.1"
}

jar {
    from sourceSets.main.output
    from sourceSets.api.output
}

processResources {
    outputs.upToDateWhen { false }
    filesMatching('META-INF/mods.toml') {
        //Replace some keys from the mods.toml with values from the gradle.properties file
        expand "version": projecte_version, "mc_version": minecraft_version, "forge_version": min_forge_version, "loader_version": loader_version
    }
}

task apiJar(type: Jar) {
    from sourceSets.api.output
    classifier = "api"
}

shadowJar {
    from sourceSets.main.output
    from sourceSets.api.output

    // Only shadow apache commons-math3
    dependencies {
        include dependency('org.apache.commons:commons-math3:.*')
    }
    exclude('org/apache/commons/math3/analysis/**')
    exclude('org/apache/commons/math3/complex/**')
    exclude('org/apache/commons/math3/dfp/**')
    exclude('org/apache/commons/math3/distribution/**')
    exclude('org/apache/commons/math3/filter/**')
    exclude('org/apache/commons/math3/fitting/**')
    exclude('org/apache/commons/math3/genetics/**')
    exclude('org/apache/commons/math3/geometry/**')
    exclude('org/apache/commons/math3/linear/**')
    exclude('org/apache/commons/math3/ml/**')
    exclude('org/apache/commons/math3/ode/**')
    exclude('org/apache/commons/math3/optim/**')
    exclude('org/apache/commons/math3/optimization/**')
    exclude('org/apache/commons/math3/primes/**')
    exclude('org/apache/commons/math3/random/**')
    exclude('org/apache/commons/math3/special/**')
    exclude('org/apache/commons/math3/stat/**')
    exclude('org/apache/commons/math3/transform/**')

    exclude('assets/org/**')
    exclude('META-INF/maven/**')

    // Relocate apache commons-math3 to prevent conflicts with other mods that include it
    relocate 'org.apache.commons.math3', 'moze_intel.projecte.shaded.org.apache.commons.math3'

    classifier = 'universal' // Replace the default JAR
}

reobf {
    shadowJar {
        // Reobfuscate the shadowed JAR
    }
    apiJar {
        classpath = sourceSets.api.compileClasspath
    }
}

task updateJSON {
	doLast {
    	def updateJsonFile = file('update.json')
    	def updateJson = new JsonSlurper().parse(updateJsonFile) as Map

    	updateJson."${minecraft_version}"."${project.version}" = "See https://www.curseforge.com/minecraft/mc-mods/projecte/files for detailed information."

    	// Update promos
    	updateJson.promos."${minecraft_version}-latest" = "${project.version}"
    	updateJson.promos."${minecraft_version}-recommended" = "${project.version}"

    	updateJsonFile.write(JsonOutput.prettyPrint(JsonOutput.toJson(updateJson)))
	}
}

artifacts {
    archives apiJar
}
